---
- name: Provision monitoring system
  hosts: monitor
  remote_user: root

  roles:  
    - role: nginx

    - role: grafana
      grafana_security:
        admin_user: "{{ grafana_admin_user }}"
        admin_password: "{{ grafana_admin_passwd }}"
      grafana_datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        url: 'http://localhost:9090'
        basicAuth: False
      grafana_dashboards:
      - dashboard_id: 8919
        revision_id: 5
        datasource: prometheus
      vars:
        grafana_admin_user: admin
        grafana_admin_passwd: mrpssprm

    - role: prometheus
      prometheus_platform_architecture: linux-armv7
      prometheus_rules:
        - name: server_alerts
          rules:
          - alert: ServerDown
            expr: up{job="mrps"} == 0
            for: "1m"
            annotations:
              summary: "Server is down."
              description: "Server [[ $labels.instance ]] is down."
          - alert: CPUThresholdExeeded
            expr: (100 * (1 - avg by(instance)(irate(node_cpu{job='mrps',mode='idle'}[5m])))) > 80
            for: "1m"
            annotations:
              summary: "Instance [[ $labels.instance ]] CPU usage is avobe 80%"
              description: "This device's cpu usage has exceeded the threshold with a value of [[ $value ]]."
        - name: erlang_vm_alerts
          rules:
          - alert: ServerBEAMDown
            expr: up{job="mrps", group="server_vm"} == 0
            for: "1m"
            annotations:
              summary: "Server BEAM is down."
              description: "[[ $labels.instance ]]'s Erlang VM is down."
          - alert: ClientBEAMDown
            expr: up{job="mrps", group="clients_vm"} == 0
            for: "1m"
            annotations:
              summary: "Client BEAM is down."
              description: "[[ $labels.instance ]]'s Erlang VM is down."
  
  tasks:
    - name: Configure Prometheus
      block:
        - name: copy prometheus config
          template:
            src: templates/prometheus.yml.j2
            dest: "/etc/prometheus/prometheus.yml"
            owner: "prometheus"
            group: "prometheus"
          notify: restart prometheus
        - name: (htpasswd module dependency) install python-passlib
          apt:
            name: python-passlib
        - name: add prometheus user/passwd to nginx
          htpasswd:
            path: /etc/nginx/.htpasswd
            username: "{{ prometheus_web_user }}"
            password: "{{ prometheus_web_passwd }}"
            owner: www-data
        - name: copy prometheus server block
          copy:
            src: files/prometheus.server
            dest: /etc/nginx/sites-available/prometheus
            owner: www-data
        - name: enable prometheus server block
          file:
            src: /etc/nginx/sites-available/prometheus
            dest: /etc/nginx/sites-enabled/prometheus
            state: link
            owner: www-data
        - name: remove default nginx site 
          file:
            state: absent
            path: /etc/nginx/sites-enabled/default
          notify: reload nginx

      vars:
        server: "{{ groups['server'][0] }}"
        clients: "{{ groups['clients'] }}"
        prometheus_web_user: admin
        prometheus_web_passwd: mrpssprm
      tags: prometheus-config

    - name: configure grafana
      block:
        - name: copy grafana server block
          copy:
            src: files/grafana.server
            dest: /etc/nginx/sites-available/grafana
            owner: www-data
        - name: enable grafana server block
          file:
            src: /etc/nginx/sites-available/grafana
            dest: /etc/nginx/sites-enabled/grafana
            state: link
            owner: www-data
          notify: reload nginx

  handlers:
    - name: restart prometheus
      service: 
        name: prometheus
        state: restarted
        enabled: yes
    
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
